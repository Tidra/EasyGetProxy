# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  workflow_dispatch:
  push:
    # Publish semver tags as releases.
    tags: [ 'v*' ]    
  # release:
  #   types: [published]
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        build: [macos, linux, windows]
        include:
          - build: macos
            os: macos-latest
            archive-name: darwin
            exe-name: EasyGetProxy
          - build: linux
            os: ubuntu-latest
            archive-name: linux
            exe-name: EasyGetProxy
          - build: windows
            os: windows-latest
            archive-name: windows
            exe-name: EasyGetProxy.exe

    permissions:
      contents: write
    
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build
      run: go build -v -o ${{ matrix.exe-name }} .

    - name: Test
      run: go test -v ./...

    - name: Prepare Packaging
      run: tar zcvf EasyGetProxy_${{ github.ref_name }}_${{ matrix.archive-name }}.tar.gz ${{ matrix.exe-name }} LICENSE config assets

    - name: Upload to release
      uses: JasonEtco/upload-to-release@master
      with:
        args: EasyGetProxy_${{ github.ref_name }}_${{ matrix.archive-name }}.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}